# # # # sol2
# The MIT License (MIT)
# 
# Copyright (c) 2013-2017 Rapptz, ThePhD, and contributors
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

language: cpp
sudo: required
dist: trusty

git:
    depth: 5

before_install:
- source ./scripts/preparations.osx.sh

install:
- install_os_deps

script:
- echo "Configuration info:"
- export_compiler_vars
- ninja --version
- python3 --version
- python3 bootstrap.py --ci && ninja

notifications:
    webhooks:
        urls:
            - https://webhooks.gitter.im/e/b864d553270a069d26c8
        on_success: change  # options: [always|never|change] default: always
        on_failure: always  # options: [always|never|change] default: always
        on_start: never     # options: [always|never|change] default: always
    email:
        on_success: change
        on_failure: change

matrix:
  fast_finish: true
  include: 
    # linux machines
    # gcc
    - os: linux
      env: COMPILER=g++-4.9 LUA_VERSION=lua52
      compiler: gcc
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.9
          - g++-4.9
          - ninja-build
          - liblua5.2-dev
          - python3

    # gcc-5
    - os: linux
      env: COMPILER=g++-5 LUA_VERSION=lua52
      compiler: gcc
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-5
          - g++-5
          - ninja-build
          - liblua5.2-dev
          - python3

    # gcc-5
    - os: linux
      env: COMPILER=g++-5 LUA_VERSION=luajit51
      compiler: gcc
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-5
          - g++-5
          - ninja-build
          - libluajit-5.1-dev

    # gcc-5:i386
    - os: linux
      env: COMPILER=g++-5 LUA_VERSION=luajit51:i386
      compiler: gcc
      install:
       - sudo dpkg --add-architecture i386
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-5
          - g++-5
          - ninja-build
          - libluajit-5.1-dev
          - libluajit-5.1-dev:i386
          - libc6:i386
          - libncurses5:i386
          - libstdc++6:i386
          - gcc-5-multilib
          - g++-5-multilib
          - linux-libc-dev:i386
          - python3

    # clang
    - os: linux
      env:
        - LUA_VERSION=lua52
        - LLVM_VERSION=3.6.0
        - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz
        - COMPILER=clang++
        - CPPFLAGS="-I $HOME/clang-$LLVM_VERSION/include/c++/v1"
        - CXXFLAGS=-lc++
        - PATH=$HOME/clang-$LLVM_VERSION/bin:$PATH
        - LD_LIBRARY_PATH=$HOME/clang-$LLVM_VERSION/lib:$LD_LIBRARY_PATH
      before_install:
       - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH
       - mkdir $HOME/clang-$LLVM_VERSION
       - tar xf $LLVM_ARCHIVE_PATH -C $HOME/clang-$LLVM_VERSION --strip-components 1
       - export PATH=$HOME/clang+llvm/bin:$PATH
       - source ./scripts/preparations.osx.sh
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.9
          - g++-4.9
          - ninja-build
          - liblua5.2-dev
          - python3

    - os: linux
      env:
        - LUA_VERSION=lua52
        - LLVM_VERSION=3.7.0
        - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz
        - COMPILER=clang++
        - CPPFLAGS="-I $HOME/clang-$LLVM_VERSION/include/c++/v1"
        - CXXFLAGS=-lc++
        - PATH=$HOME/clang-$LLVM_VERSION/bin:$PATH
        - LD_LIBRARY_PATH=$HOME/clang-$LLVM_VERSION/lib:$LD_LIBRARY_PATH
      before_install:
       - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH
       - mkdir $HOME/clang-$LLVM_VERSION
       - tar xf $LLVM_ARCHIVE_PATH -C $HOME/clang-$LLVM_VERSION --strip-components 1
       - export PATH=$HOME/clang+llvm/bin:$PATH
       - source ./scripts/preparations.osx.sh
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.9
          - g++-4.9
          - ninja-build
          - liblua5.2-dev
          - python3

    - os: linux
      env:
        - LUA_VERSION=lua52
        - LLVM_VERSION=3.8.0
        - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz
        - COMPILER=clang++
        - CPPFLAGS="-I $HOME/clang-$LLVM_VERSION/include/c++/v1"
        - CXXFLAGS=-lc++
        - PATH=$HOME/clang-$LLVM_VERSION/bin:$PATH
        - LD_LIBRARY_PATH=$HOME/clang-$LLVM_VERSION/lib:$LD_LIBRARY_PATH
      before_install:
       - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH
       - mkdir $HOME/clang-$LLVM_VERSION
       - tar xf $LLVM_ARCHIVE_PATH -C $HOME/clang-$LLVM_VERSION --strip-components 1
       - export PATH=$HOME/clang+llvm/bin:$PATH
       - source ./scripts/preparations.osx.sh
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.9
          - g++-4.9
          - ninja-build
          - liblua5.2-dev
          - python3

    - os: linux
      env:
        - LUA_VERSION=lua52
        - LLVM_VERSION=3.9.0
        - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz
        - COMPILER=clang++
        - CPPFLAGS="-I $HOME/clang-$LLVM_VERSION/include/c++/v1"
        - CXXFLAGS=-lc++
        - PATH=$HOME/clang-$LLVM_VERSION/bin:$PATH
        - LD_LIBRARY_PATH=$HOME/clang-$LLVM_VERSION/lib:$LD_LIBRARY_PATH
      before_install:
       - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH
       - mkdir $HOME/clang-$LLVM_VERSION
       - tar xf $LLVM_ARCHIVE_PATH -C $HOME/clang-$LLVM_VERSION --strip-components 1
       - export PATH=$HOME/clang+llvm/bin:$PATH
       - source ./scripts/preparations.osx.sh
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.9
          - g++-4.9
          - ninja-build
          - liblua5.2-dev
          - python3

    - os: linux
      env:
        - LUA_VERSION=luajit51
        - LLVM_VERSION=4.0.0
        - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz
        - COMPILER=clang++
        - CPPFLAGS="-I $HOME/clang-$LLVM_VERSION/include/c++/v1"
        - CXXFLAGS=-lc++
        - PATH=$HOME/clang-$LLVM_VERSION/bin:$PATH
        - LD_LIBRARY_PATH=$HOME/clang-$LLVM_VERSION/lib:$LD_LIBRARY_PATH
      before_install:
       - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH
       - mkdir $HOME/clang-$LLVM_VERSION
       - tar xf $LLVM_ARCHIVE_PATH -C $HOME/clang-$LLVM_VERSION --strip-components 1
       - export PATH=$HOME/clang+llvm/bin:$PATH
       - source ./scripts/preparations.osx.sh
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.9
          - g++-4.9
          - ninja-build
          - libluajit-5.1-dev
          - python3
          
    - os: linux
      env:
        - LUA_VERSION=lua52
        - LLVM_VERSION=4.0.0
        - LLVM_ARCHIVE_PATH=$HOME/clang+llvm.tar.xz
        - COMPILER=clang++
        - CPPFLAGS="-I $HOME/clang-$LLVM_VERSION/include/c++/v1"
        - CXXFLAGS=-lc++
        - PATH=$HOME/clang-$LLVM_VERSION/bin:$PATH
        - LD_LIBRARY_PATH=$HOME/clang-$LLVM_VERSION/lib:$LD_LIBRARY_PATH
      before_install:
       - wget http://llvm.org/releases/$LLVM_VERSION/clang+llvm-$LLVM_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -O $LLVM_ARCHIVE_PATH
       - mkdir $HOME/clang-$LLVM_VERSION
       - tar xf $LLVM_ARCHIVE_PATH -C $HOME/clang-$LLVM_VERSION --strip-components 1
       - export PATH=$HOME/clang+llvm/bin:$PATH
       - source ./scripts/preparations.osx.sh
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - gcc-4.9
          - g++-4.9
          - ninja-build
          - liblua5.2-dev
          - python3
 
    - os: osx
      osx_image: xcode7.3
      compiler: gcc
      env: COMPILER=g++-4.9 LUA_VERSION=lua53

#    - os: osx
#      osx_image: xcode8.3
#      compiler: gcc
#      env: COMPILER=g++-5 LUA_VERSION=luajit
#
#    - os: osx
#      osx_image: xcode8.3
#      compiler: gcc
#      env: COMPILER=g++-5 LUA_VERSION=lua52
#
#    - os: osx
#      osx_image: xcode8.3
#      compiler: gcc
#      env: COMPILER=g++-5 LUA_VERSION=lua53
#
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER=appleclang LUA_VERSION=lua53

  allow_failures:
    - os: osx
